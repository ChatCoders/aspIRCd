#!/usr/bin/env python

"""
Copyright 2014 Sam Dodrill <shadowh511@gmail.com>
Copyright 2015-2018 Craig Saunders <root@chatfreedom.us>
Copyright 2018-2019 David Franklin <syzolin@aspircd.com>
This software is under GPL.
"""
art = """
                ___ ____   ____    _
  __ _ ___ _ __|_ _|  _ \ / ___|__| |
 / _` / __| '_ \| || |_) | |   / _` |
| (_| \__ \ |_) | ||  _ <| |__| (_| |
 \__,_|___/ .__/___|_| \_\\____\__,_|
          |_|
                              v5.2.0
"""
welcome2 ="""
---------------------------------------------------------------------------------
              Welcome to the AspIRCd Installation Setup for Linux
---------------------------------------------------------------------------------
CURRENT BUILD: v5.2.0
BUILD ALIAS: ASPIRCD MEGA
RELEASED - Sep 20, 2019

---------------------------------------------------------------------------------
              COPYRIGHT (C) 2019 - 2020 ALL RIGHTS RESERVED - SYZOLIN
---------------------------------------------------------------------------------
This installation script is automated and will install all the dependencies required for Building AspIRCd.
This installation script will install, configure and build AspIRCd for you.
"""
print(art)
print(welcome2)
raw_input("Press enter to configure AspIRCd....")
import subprocess
subprocess.call("./dependencies.sh")


from os import system
import os
installloc = ("$HOME/ircd")
installloc2 = os.getenv("HOME")

def promptUser(prompt, default):
    inp = raw_input("%s [%s]> " % (prompt, default))

    if inp == "":
        return default
    else:
        return inp

def promptYesNo(prompt, default=True):
    inp = False if promptUser(prompt, "y") == "n" else True
    return inp

configflags = ["./configure"]

welcome ="""

---------------------------------------------------------------------------------------------------------------
ASPIRCD SETUP
---------------------------------------------------------------------------------------------------------------
CONFIGURATIONS:
"""

print(art)
print(welcome)

print("")

print("Please specify the maximum nickname length. This must be the same across")
print("all servers in your network or you risk desyncs. The maximum is 50.")

nicklen = 100
while nicklen > 51:
    if nicklen != 100:
        print "Error: you must choose a value under 50."

    nicklen = int(promptUser("Maximum nickname length?", "31"))

print("")


print("Please specify the maximum topic length. This must be the same across")
print("all servers in your network or you risk netsplits. The maximum is 780.")

topiclen = 800
while topiclen > 781:
    if topiclen != 800:
        print "Error: you must choose a value under 780."

    topiclen = int(promptUser("Maximum topic length?", "390"))

print("")

print("Would you like to use SSL encryption for client and server links? (Recommended)")

usessl = promptYesNo("SSL? (y/n)")

print("")

print("Would you like to enable shared sqlite?")
print("ideal for low-power ARM boards and budget VPSes)")

sqlite = promptYesNo("Shared sqlite? (y/n)")

print("")

print("Would you like to enable IPv6 Support?")

IPv6 = promptYesNo("IPv6? (y/n)")

configflags.append("--prefix=%s" % installloc)
configflags.append("--with-nicklen=%s" % nicklen)
configflags.append("--with-topiclen=%s" % topiclen)

if usessl:
    configflags.append("--enable-openssl")
else:
    configflags.append("--disable-openssl")

if not sqlite:
    configflags.append("")
else:
    configflags.append("--with-shared-sqlite")

if IPv6:
    configflags.append("--enable-ipv6")
else:
    configflags.append("")

print("\nThat should be it for now. Running %s" % " ".join(configflags))

print("")
print("")
print("")
raw_input("Press enter to make Configuration file for AspIRCd...")
import subprocess
subprocess.call("./autogen.sh")


system(" ".join(configflags))

system("clear")

print(art)
raw_input("Configured! Press enter to build AspIRCd.")
import subprocess
subprocess.call("./build.sh")

# vim: set ts=4 sw=4 tw=0 et
